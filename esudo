#!/usr/bin/python

"""eSudo - a GUI sudo tool in python and elementary

Base code by AntCenter, polished by Jeff Hoogland
"""

import os
import ecore
import evas
import elementary
import time, PAM, getpass, sys


#----Popups
def pw_error_popup(bt, win):
    popup = elementary.Popup(win)
    popup.size_hint_weight = (evas.EVAS_HINT_EXPAND, evas.EVAS_HINT_EXPAND)
    popup.text = "<b>Error</><br><br>Incorrect Password!<br>Please try again."
    popup.timeout = 3.0
    popup.show()

#----eSudo
class eSudo(object):
    def __init__( self, command=False, window=False ):
        if not window:
            self.mainWindow = win = elementary.StandardWindow("eSudo", "eSudo")
            self.mainWindow.size_hint_weight_set(evas.EVAS_HINT_EXPAND, evas.EVAS_HINT_EXPAND)
            self.mainWindow.size_hint_align_set(evas.EVAS_HINT_FILL, evas.EVAS_HINT_FILL)
            self.mainWindow.resize(300, 200)
            self.mainWindow.callback_delete_request_add(lambda o: elementary.exit())
            self.mainWindow.show()
            self.Window = True
        else:
            self.mainWindow = win = window
            self.Window = False

        self.cmd = command

#--------eSudo Window
        bz = elementary.Box(win)
        bz.size_hint_weight_set(evas.EVAS_HINT_EXPAND, evas.EVAS_HINT_EXPAND)

        fr = elementary.Frame(win)
        bz.pack_end(fr)

        if self.cmd:
            fr.text_set("Command:")
            self.cmdline = cmdline = elementary.Label(win)
            cmdline.text = "<i>%s</i>"%self.cmd
            cmdline.size_hint_align = (0.0, 0.5)
        else:
            fr.text_set("Enter Command:")
            self.cmdline = cmdline = elementary.Entry(win)
            cmdline.single_line = True
            cmdline.size_hint_weight_set(0.5, 0.5)
            cmdline.size_hint_align_set(0.5, 0.5)

        cmdline.show()
        fr.content = cmdline

        sep = elementary.Separator(win)
        sep.horizontal_set(True)
        bz.pack_end(sep)
        sep.show()

        bz1 = elementary.Box(win)
        bz.pack_end(bz1)
        bz1.show()

        lb = elementary.Label(win)
        lb.text = "<b>Password:</b>"
        lb.size_hint_align = (0.0, 0.5)
        bz1.pack_end(lb)
        lb.show()

        en = elementary.Entry(win)
        en.single_line = True
        en.password = True
        en.size_hint_weight_set(0.5, 0.5)
        en.size_hint_align_set(0.5, 0.5)
        bz1.pack_end(en)
        en.show()

        sep = elementary.Separator(win)
        sep.horizontal_set(True)
        bz.pack_end(sep)
        sep.show()

        bz.show()
        fr.show()

        bz2 = elementary.Box(win)
        bz2.horizontal_set(True)
        bz2.size_hint_weight_set(evas.EVAS_HINT_EXPAND, 0.0)
        bz2.size_hint_align_set(evas.EVAS_HINT_FILL, evas.EVAS_HINT_FILL)

        bt = elementary.Button(win)
        bt.text_set("Cancel")
        bt.callback_clicked_add(self.esudo_cancel, en)
        bt.size_hint_align_set(evas.EVAS_HINT_FILL, evas.EVAS_HINT_FILL)
        bt.size_hint_weight_set(evas.EVAS_HINT_EXPAND, 0.0)
        bz2.pack_end(bt)
        bt.show()

        bt = elementary.Button(win)
        bt.text_set("OK")
        bt.callback_clicked_add(self.password_check, en)
        bt.size_hint_align_set(evas.EVAS_HINT_FILL, evas.EVAS_HINT_FILL)
        bt.size_hint_weight_set(evas.EVAS_HINT_EXPAND, 0.0)
        bz2.pack_end(bt)
        bt.show()

        bz.pack_end(bz2)
        bz2.show()

        en.focus_set(True)
        self.iw = iw = elementary.InnerWindow(win)
        iw.content_set(bz)
        iw.show()
        iw.activate()

#--------Password Checker
    def password_check(self, bt, en):

#------------Sets Password
        def pam_conv(auth, query_list, userData):
            password = en.entry_get()
            resp = []
            for i in range(len(query_list)):
                query, type = query_list[i]
                if type == PAM.PAM_PROMPT_ECHO_ON or type == PAM.PAM_PROMPT_ECHO_OFF:
                    val = password
                    resp.append((val, 0))
                elif type == PAM.PAM_PROMPT_ERROR_MSG or type == PAM.PAM_PROMPT_TEXT_INFO:
                    resp.append(('', 0))
                else:
                    return None
            return resp

#------------Username & Service To Use
        username = getpass.getuser()
        service = 'passwd'

#------------Start Password Test
        auth = PAM.pam()
        auth.start(service)
        auth.set_item(PAM.PAM_USER, username)
        auth.set_item(PAM.PAM_CONV, pam_conv)
        try:
            auth.authenticate()
            auth.acct_mgmt()
        except PAM.error, resp:
            pw_error_popup(bt, self.mainWindow)
            en.entry_set("")
            print("Invalid password! Please try again.")
            return
        except:
            print("Internal error! File bug report.")
        else:
            self.esudo_ok(en)

#--------eSudo Cancel Button
    def esudo_cancel(self, bt, en):
        en.entry_set("")
        self.close()

    def close(self):
        if self.Window:
            elementary.exit()
        else:
            self.iw.delete()

#--------eSudo OK Button
    def esudo_ok(self, en):
        password = en.entry_get()
        print("Starting %s"%self.cmd)
        if self.cmd:
            self.run_command("echo %s | sudo -S %s" %(password, self.cmd))
        else:
            self.run_command("echo %s | sudo -S %s" %(password, self.cmdline.entry_get()))

    def run_command(self, command):
        cmd = ecore.Exe(command)
        self.close()
        cmd.on_del_event_add(self.command_done)

    def command_done(self, event=False, cmd=False):
        print "Command done"

if __name__ == "__main__":
    cmd = ""
    if len(sys.argv) == 2:
        cmd = sys.argv[1]
    elif len(sys.argv) > 2:
        for x in sys.argv:
            if sys.argv.index(x) > 0:
                cmd = "%s %s"%(cmd, x)
    print cmd
    start = eSudo(cmd)    

    elementary.run()    
    elementary.shutdown()

